% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc_tidiers.R
\name{mcmc_tidiers}
\alias{mcmc_tidiers}
\alias{tidyMCMC}
\alias{tidy.rjags}
\alias{tidy.stanfit}
\alias{tidy.mcmc}
\alias{tidy.MCMCglmm}
\title{Tidying methods for MCMC (Stan, JAGS, etc.) fits}
\usage{
tidyMCMC(x, pars, estimate.method = c("mean", "median"),
  conf.int = FALSE, conf.level = 0.95, conf.method = c("quantile",
  "HPDinterval"), drop.pars = c("lp__", "deviance"), rhat = FALSE,
  ess = FALSE, index = FALSE, ...)

\method{tidy}{rjags}(x, estimate.method = "mean", conf.int = FALSE,
  conf.level = 0.95, conf.method = "quantile", ...)

\method{tidy}{stanfit}(x, pars, estimate.method = c("mean", "median"),
  conf.int = FALSE, conf.level = 0.95, conf.method = c("quantile",
  "HPDinterval"), drop.pars = c("lp__", "deviance"), rhat = FALSE,
  ess = FALSE, index = FALSE, ...)

\method{tidy}{mcmc}(x, pars, estimate.method = c("mean", "median"),
  conf.int = FALSE, conf.level = 0.95, conf.method = c("quantile",
  "HPDinterval"), drop.pars = c("lp__", "deviance"), rhat = FALSE,
  ess = FALSE, index = FALSE, ...)

\method{tidy}{MCMCglmm}(x, effects = "fixed", scales, ...)
}
\arguments{
\item{x}{a model fit to be converted to a data frame}

\item{pars}{(character) specification of which parameters to include}

\item{estimate.method}{method for computing point estimate ("mean" or "median")}

\item{conf.int}{(logical) include confidence interval?}

\item{conf.level}{probability level for CI}

\item{conf.method}{method for computing confidence intervals
("quantile" or "HPDinterval")}

\item{drop.pars}{Parameters not to include in the output (such
as log-probability information)}

\item{rhat, ess}{(logical) include Rhat and/or effective sample size estimates?}

\item{index}{Add index column, remove index from term. For example, 
\code{term a[13]} becomes \code{term a} and \code{index 13}.}

\item{...}{unused}

\item{effects}{which effects (fixed, random, etc.) to return}

\item{scales}{scales on which to report results}
}
\description{
Tidying methods for MCMC (Stan, JAGS, etc.) fits
}
\examples{

# Using example from "RStan Getting Started"
# https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started

model_file <- system.file("extdata", "8schools.stan", package = "broom.mixed")
schools_dat <- list(J = 8, 
                    y = c(28,  8, -3,  7, -1,  1, 18, 12),
                    sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
\dontrun{
  if (require(rstan)) {
      set.seed(2015)
      rstan_example <- rstan::stan(file = model_file, data = schools_dat, 
                         iter = 1000, chains = 2, save_dso = FALSE)
     }
}
rstan_example <- readRDS(system.file("extdata", "rstan_example.rds", package = "broom.mixed"))
if (require(broom)) {
   tidy(rstan_example)
   tidy(rstan_example, conf.int = TRUE, pars = "theta")
  
   td_mean <- tidy(rstan_example, conf.int = TRUE)
   td_median <- tidy(rstan_example, conf.int = TRUE, estimate.method = "median")

   if (require(dplyr) && require(ggplot2)) {
      tds <- rbind(mutate(td_mean, method = "mean"),
               mutate(td_median, method = "median")) \%>\%
         mutate(type=ifelse(grepl("^theta",term),"theta",
              ifelse(grepl("^eta",term),"eta",
                    "other")))
  
       ggplot(tds, aes(estimate, term)) +
        geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),height=0) +
        geom_point(aes(color = method))+
        facet_wrap(~type,scale="free",ncol=1)
   } ## require(dplyr,ggplot2)
} ## if require(broom)

if (requireNamespace("MCMCglmm", quietly = TRUE)) {
    data(PlodiaPO,package="MCMCglmm")  
    model1 <- MCMCglmm::MCMCglmm(PO~1, random=~FSfamily, data=PlodiaPO, verbose=FALSE)
    tidy(model1)
}
}
